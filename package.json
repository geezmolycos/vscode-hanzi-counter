{
  "name": "vscode-hanzi-counter",
  "displayName": "Multi-purpose Hanzi and Word Counter",
  "keywords": [
    "chinese",
    "cjk",
    "count",
    "regex"
  ],
  "description": "多功能文档字数统计，支持中文、日文、朝鲜/韩文，支持选区统计，点击即可高亮，也可用正则表达式自定义要统计的内容。\n\n中国語/日本語/朝鮮/韓国語文字数計算ツール。중국어/일본어/한국어/조선어 세기 도구.\n\nCustomizable word counter with great support of Chinese characters (Hanzi), Japanese and Korean. Supports count in selection. Supports highlighting. Use custom regexes to match any character type you want.",
  "version": "1.2.0",
  "publisher": "geezmolycos",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/geezmolycos/vscode-hanzi-counter"
  },
  "homepage": "https://github.com/geezmolycos/vscode-hanzi-counter",
  "license": "MIT",
  "icon": "images/icon.png",
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vscode-hanzi-counter.clickedTooltip",
        "title": "Hanzi counter show detailed"
      }
    ],
    "configuration": {
      "title": "Hanzi Counter",
      "properties": {
        "vscode-hanzi-counter.statusBar.enabled": {
          "type": "boolean",
          "scope": "language-overridable",
          "order": 1,
          "default": true,
          "description": "Show counter on status bar. This configuration is overridable by language."
        },
        "vscode-hanzi-counter.statusBar.alignment": {
          "type": "string",
          "scope": "window",
          "order": 2,
          "enum": [
            "left",
            "right"
          ],
          "default": "right",
          "description": "Place status bar item to left or right. Restart for changes to take effect."
        },
        "vscode-hanzi-counter.statusBar.priority": {
          "type": "number",
          "scope": "window",
          "order": 3,
          "default": 105,
          "description": "Status bar item priority. Restart for changes to take effect."
        },
        "vscode-hanzi-counter.counter.regexes": {
          "type": "object",
          "scope": "window",
          "order": 10,
          "additionalProperties": {
            "type": "string"
          },
          "default": {
            "dev@wen": "[\\u{fdd0}\\u{fdd1}]",
            "simple_word": "[\\p{L}\\p{Pc}\\p{N}]+",
            "spaced_word": "(?:\\S*[\\p{L}\\p{Pc}\\p{N}]\\S*)",
            "letter": "\\p{L}",
            "mark": "\\p{M}",
            "number": "\\p{N}",
            "punct": "\\p{P}",
            "symbol": "\\p{S}",
            "nonwhite": "\\S",
            "white": "\\s",
            "character": "[\\u{0000}-\\u{10ffff}]",
            "nonascii": "\\P{ASCII}",
            "han": "(?=\\p{scx=Han})(?=\\p{L}).",
            "han_punct": "(?=\\p{scx=Han}|\\p{scx=Common})(?=\\p{P}|\\p{S}|\\p{N}).",
            "utf8_1": "[\\u{0000}-\\u{007f}]",
            "utf8_2": "[\\u{0080}-\\u{07ff}]",
            "utf8_3": "[\\u{0800}-\\u{ffff}]",
            "utf8_4": "[\\u{10000}-\\u{10ffff}]",
            "hiragana": "(?=\\p{sc=Hiragana})(?=\\p{L}).",
            "katakana": "(?=\\p{sc=Katakana})(?=\\p{L}).",
            "jp_punct": "(?=\\p{scx=Han}|\\p{scx=Hiragana}|\\p{scx=Katakana}|\\p{scx=Common})(?=\\p{P}|\\p{S}|\\p{N}).",
            "hangul": "[\\u{ac00}-\\u{d7af}\\u{3130}-\\u{318f}\\u{ffa0}-\\u{ffdf}]|[\\u{1100}-\\u{115f}\\u{a960}-\\u{a97f}]|(?<![\\u{1100}-\\u{115f}\\u{a960}-\\u{a97f}])[\\u{1160}-\\u{11a7}\\u{d7b0}-\\u{d7ca}]|(?<![\\u{1160}-\\u{11a7}\\u{d7b0}-\\u{d7ca}])[\\u{11a8}-\\u{11ff}\\u{d7cb}-\\u{d7ff}]",
            "hangul_punct": "(?=\\p{scx=Han}|\\p{scx=Hangul}|\\p{scx=Common})(?=\\p{P}|\\p{S}|\\p{N}).",
            "cjk": "(?=\\p{scx=Han}|\\p{scx=Hiragana}|\\p{scx=Katakana}|\\p{scx=Hangul})(?=\\p{L}).",
            "cjk_punct": "(?=\\p{scx=Han}|\\p{scx=Hiragana}|\\p{scx=Katakana}|\\p{scx=Hangul}|\\p{scx=Common})(?=\\p{P}|\\p{S}|\\p{N})."
          },
          "description": "Regexes for matching each type of words or characters to count. Those items can be used in templates. With flags `gus`. Restart for changes to take effect."
        },
        "vscode-hanzi-counter.counter.templates": {
          "type": "object",
          "scope": "window",
          "order": 10,
          "additionalProperties": {
            "type": "string"
          },
          "default": {
            "dev": "`dev: ${dev}`",
            "jp": "{/* ==> 日本語 Japanese <== */const prefix = '<table width=\"100%\"><tbody>';const suffix = '</tbody></table>';return prefix+ this.tableRow('単語数:', spaced_word, '\"spaced_word\"')+ this.tableRow('非ASCII文字数:', nonascii, '\"nonascii\"')+ this.tableRow('日本語文字数:', han + hiragana + katakana + jp_punct, '[[\"jp_punct\"],[\"han\"],[],[\"hiragana\"],[],[\"katakana\"],[]]')+ this.tableRow('日本語文字数(句読点なし):', han + hiragana + katakana, '[[],[\"han\"],[],[\"hiragana\"],[],[\"katakana\"],[]]')+ this.tableRow('漢字数:', han, '\"han\"')+ this.tableRow('仮名数(平/片):', hiragana + katakana, '[[],[],[],[\"hiragana\"],[],[\"katakana\"],[]]', `${hiragana + katakana} (${hiragana}/${katakana})`)+ this.tableRow('CJK文字数:', cjk, '[[\"cjk\"],[\"han\"],[],[\"hiragana\"],[\"hangul\"],[\"katakana\"],[]]')+ this.tableRow('非空白文字数:', nonwhite, '\"nonwhite\"')+ this.tableRow('UTF-8:', utf8_1 + utf8_2*2 + utf8_3*3 + utf8_4*4, '[[\"utf8_1\"],[\"utf8_4\"],[],[],[\"utf8_3\"],[\"utf8_2\"],[]]', `${utf8_1 + utf8_2*2 + utf8_3*3 + utf8_4*4} (${utf8_1}/${utf8_2}/${utf8_3}/${utf8_4})`)+ this.tableRow('総文字数:', character)+ suffix + '\\n\\n'+ this.paging.generate('jp');}",
            "kr": "{/* ==> 한국어/조선어 Korean <== */const prefix = '<table width=\"100%\"><tbody>';const suffix = '</tbody></table>';return prefix+ this.tableRow('단어수:', spaced_word, '\"spaced_word\"')+ this.tableRow('비ASCII 글자수:', nonascii, '\"nonascii\"')+ this.tableRow('한글 글자수(구두점 아님):', hangul, '[[\"hangul\"],[],[],[],[],[],[]]')+ this.tableRow('한글 글자수:', hangul + hangul_punct, '[[\"hangul\"],[],[],[],[\"hangul_punct\"],[],[]]')+ this.tableRow('한자와 한글수:', han + hangul + hangul_punct, '[[\"hangul\"],[\"han\"],[],[],[\"hangul_punct\"],[],[]]')+ this.tableRow('CJK문자수:', cjk, '[[\"cjk\"],[\"han\"],[],[\"hiragana\"],[\"hangul\"],[\"katakana\"],[]]')+ this.tableRow('공백이 아닌 문자수:', nonwhite, '\"nonwhite\"')+ this.tableRow('UTF-8:', utf8_1 + utf8_2*2 + utf8_3*3 + utf8_4*4, '[[\"utf8_1\"],[\"utf8_4\"],[],[],[\"utf8_3\"],[\"utf8_2\"],[]]', `${utf8_1 + utf8_2*2 + utf8_3*3 + utf8_4*4} (${utf8_1}/${utf8_2}/${utf8_3}/${utf8_4})`)+ this.tableRow('총문자수:', character)+ suffix + '\\n\\n'+ this.paging.generate('kr');}",
            "overview": "/* ==> 功能概览 Feature overview <== */`欢迎使用，下面向你展示该字数统计扩展的功能。\\n\\n修改文件时，以下内容会随字数变化而变化：\\n- 单词数：[${spaced_word}](command:vscode-hanzi-counter.highlight?%5B%22spaced_word%22%5D)\\n- 汉字数(包括标点)：[${han + han_punct}](command:vscode-hanzi-counter.highlight?%5B${encodeURIComponent('[[\"han\"],[],[\"han_punct\"],[],[],[],[]]')}%5D)\\n\\n点击上面的数字，可以高亮对应的文本。\\n\\n使用前要先[设置默认提示框模板](command:workbench.action.openSettings?${encodeURIComponent('[\"vscode-hanzi-counter.template\"]')})。\\n\\n将 \\`Tooltip Template Name\\` 设置为 \\`Templates\\` 设置中想要显示的某一项的名字（靠前的一列）即可。\\n\\nWelcome to use. This page is a little demo of the extension capabilities. \\n\\nThe following items will update as you modify the file:\\n- Words: [${spaced_word}](command:vscode-hanzi-counter.highlight?%5B%22spaced_word%22%5D)\\n- Letters & Punctuations: [${letter + punct}](command:vscode-hanzi-counter.highlight?%5B${encodeURIComponent('[[\"letter\"],[],[\"punct\"],[],[],[],[]]')}%5D)\\n\\nYou can click the number shown above to highlight relevant text in the document.\\n\\nBefore starting to use, you need to [select the default tooltip template](command:workbench.action.openSettings?${encodeURIComponent('[\"vscode-hanzi-counter.template\"]')}) to show in the tooltip.\\n\\nChange \\`Tooltip Template Name\\` to one item of the \\`Items\\` column of \\`Templates\\` setting.\\nChange \\`StatusBar Template Name\\` to \\`status-bar\\` for English display on status bar.\\n\\n${this.paging.generate('overview')}`",
            "status-bar-zh": "{/* ==> 中文状态栏 Chinese Status bar <== */this.hlitMax = Infinity;this.tableRow = (str, value, hlit, display) => ('<tr>'+ `<td>${str}</td>`+ (hlit && value < this.hlitMax? `<td align=\"right\"><a href=\"command:vscode-hanzi-counter.highlight?%5B${encodeURIComponent(hlit)}%5D\">${display || value}</a></td>`: `<td align=\"right\">${display || value}</td>`) + '\\n');this.paging = this.paging || {'list': [['western', '西'],['zh-hans', '简'],['zh-hant', '繁'],['jp', '日'],['kr', '韩'],],'generate': function (current, lang=1){return '<div align=\"center\">[ ' + this.list.map(e =>e[0] !== current? `<a href=\"command:vscode-hanzi-counter.changeTooltip?%5B%22${e[0]}%22%5D\">${e[lang]}</a>`: `${e[lang]}`).join(' &#124; ') + ' ]</div>';}};return `$(pencil) ${character} 字符`;}",
            "status-bar": "{/* ==> 英文状态栏 English Status bar <== */this.hlitMax = Infinity; this.tableRow = (str, value, hlit, display) => ('<tr>'+ `<td>${str}</td>`+ (hlit && value < this.hlitMax? `<td align=\"right\"><a href=\"command:vscode-hanzi-counter.highlight?%5B${encodeURIComponent(hlit)}%5D\">${display || value}</a></td>`: `<td align=\"right\">${display || value}</td>`) + '\\n');this.paging = this.paging || {'list': [['western', 'West'],['zh-hans', 'Chs'],['zh-hant', 'Cht'],['jp', 'JP'],['kr', 'KR'],],'generate': function (current, lang=1){return '<div align=\"center\">[ ' + this.list.map(e =>e[0] !== current? `<a href=\"command:vscode-hanzi-counter.changeTooltip?%5B%22${e[0]}%22%5D\">${e[lang]}</a>`: `${e[lang]}`).join(' &#124; ') + ' ]</div>';}};return `$(pencil) Chars: ${character}`;}",
            "western": "{/* ==> 西文 Western languages <== */const prefix = '<table width=\"100%\"><tbody>';const suffix = '</tbody></table>';return prefix+ this.tableRow('Spaced words:', spaced_word, '\"spaced_word\"')+ this.tableRow('Simple words:', simple_word, '\"simple_word\"')+ this.tableRow('Non-ASCII:', nonascii, '\"nonascii\"')+ this.tableRow('Letters:', letter, '\"letter\"')+ this.tableRow('Puncts+Symbols:', punct + symbol, '[[],[],[],[\"punct\"],[],[\"symbol\"],[]]', `${punct}+${symbol}=${punct + symbol}`)+ this.tableRow('Non-white:', nonwhite, '\"nonwhite\"')+ this.tableRow('UTF-8:', utf8_1 + utf8_2*2 + utf8_3*3 + utf8_4*4, '[[\"utf8_1\"],[\"utf8_4\"],[],[],[\"utf8_3\"],[\"utf8_2\"],[]]', `${utf8_1 + utf8_2*2 + utf8_3*3 + utf8_4*4} (${utf8_1}/${utf8_2}/${utf8_3}/${utf8_4})`)+ this.tableRow('Total:', character)+ suffix + '\\n\\n'+ this.paging.generate('zh_hans');}",
            "zh-hans": "{/* ==> 简体中文 Simplified Chinese <== */const prefix = '<table width=\"100%\"><tbody>';const suffix = '</tbody></table>';return prefix+ this.tableRow('单词数:', spaced_word, '\"spaced_word\"')+ this.tableRow('非ASCII字符数:', nonascii, '\"nonascii\"')+ this.tableRow('中文字数:', han + han_punct, '[[\"han\"],[],[\"han_punct\"],[],[],[],[]]')+ this.tableRow('中文字数(不含标点):', han, '\"han\"')+ this.tableRow('CJK字符数:', cjk, '[[\"cjk\"],[\"han\"],[],[\"hiragana\"],[\"hangul\"],[\"katakana\"],[]]')+ this.tableRow('非空白字符数:', nonwhite, '\"nonwhite\"')+ this.tableRow('UTF-8:', utf8_1 + utf8_2*2 + utf8_3*3 + utf8_4*4, '[[\"utf8_1\"],[\"utf8_4\"],[],[],[\"utf8_3\"],[\"utf8_2\"],[]]', `${utf8_1 + utf8_2*2 + utf8_3*3 + utf8_4*4} (${utf8_1}/${utf8_2}/${utf8_3}/${utf8_4})`)+ this.tableRow('总字符数:', character)+ suffix + '\\n\\n'+ this.paging.generate('zh_hans');}",
            "zh-hant": "{/* ==> 繁體中文 Traditional Chinese <== */const prefix = '<table width=\"100%\"><tbody>';const suffix = '</tbody></table>';return prefix+ this.tableRow('單詞數:', spaced_word, '\"spaced_word\"')+ this.tableRow('非ASCII字符數:', nonascii, '\"nonascii\"')+ this.tableRow('中文字數:', han + han_punct, '[[\"han\"],[],[\"han_punct\"],[],[],[],[]]')+ this.tableRow('中文字數(不含標點):', han, '\"han\"')+ this.tableRow('CJK字符數:', cjk, '[[\"cjk\"],[\"han\"],[],[\"hiragana\"],[\"hangul\"],[\"katakana\"],[]]')+ this.tableRow('非空白字符數:', nonwhite, '\"nonwhite\"')+ this.tableRow('UTF-8:', utf8_1 + utf8_2*2 + utf8_3*3 + utf8_4*4, '[[\"utf8_1\"],[\"utf8_4\"],[],[],[\"utf8_3\"],[\"utf8_2\"],[]]', `${utf8_1 + utf8_2*2 + utf8_3*3 + utf8_4*4} (${utf8_1}/${utf8_2}/${utf8_3}/${utf8_4})`)+ this.tableRow('總字符數:', character)+ suffix + '\\n\\n'+ this.paging.generate('zh_hant');}"
          },
          "markdownDescription": "Each item is a Javascript expression or code block that returns a markdown string. Items of `#vscode-hanzi-counter.counter.regexes#` can be used as variables. Restart for changes to take effect."
        },
        "vscode-hanzi-counter.template.statusBarTemplateName": {
          "type": "string",
          "scope": "language-overridable",
          "order": 11,
          "default": "status-bar-zh",
          "description": "Which template to use for status bar text."
        },
        "vscode-hanzi-counter.template.tooltipTemplateName": {
          "type": "string",
          "scope": "language-overridable",
          "order": 12,
          "default": "dev",
          "description": "Which template to use for default status bar item tooltip."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "updatetemplates": "node update_templates.js",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "esbuild": "^0.17.8",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "typescript": "^4.9.3"
  }
}